import React, { useState } from 'react';
import toast from 'react-hot-toast';
import { useNavigate, Link } from 'react-router-dom';
import './Login.css';

export default function Login() {
  const navigate = useNavigate();
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleLogin = async (e) => {
    e.preventDefault();

    try {
      const res = await fetch(`${import.meta.env.VITE_API_URL}/login`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, password }),
      });

      const data = await res.json();

      if (!res.ok) {
        toast.error(data.error || '“ö–∞—Ç–µ'); // ‚ùå –û—à–∏–±–∫–∞
        return;
      }

      localStorage.setItem('user', JSON.stringify({
        token: data.token,
        ...data.user,
      }));

      localStorage.setItem('face_email', email);

      toast.success(data.message || '–°”ô—Ç—Ç—ñ –∫—ñ—Ä–¥—ñ“£—ñ–∑ ‚úÖ'); // ‚úÖ –£—Å–ø–µ—Ö
      navigate('/profile');
    } catch (err) {
      console.error(err);
      toast.error('–°–µ—Ä–≤–µ—Ä “õ–∞—Ç–µ—Å—ñ');
    }
  };

  const handleFaceID = () => {
    if (!email) {
      toast.error('–ê–ª–¥—ã–º–µ–Ω email –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑');
    } else {
      localStorage.setItem('face_email', email);
      navigate('/face-login');
    }
  };

  return (
    <div className="login-wrapper">
      <form className="login-form" onSubmit={handleLogin}>
        <h1>–ö—ñ—Ä—É</h1>
        <input
          type="email"
          placeholder="Email"
          value={email}
          required
          onChange={(e) => setEmail(e.target.value)}
        />
        <input
          type="password"
          placeholder="“ö“±–ø–∏—è—Å”©–∑"
          value={password}
          required
          onChange={(e) => setPassword(e.target.value)}
        />
        <button type="submit">–ö—ñ—Ä—É</button>
        <button type="button" className="faceid-button" onClick={handleFaceID}>
          üëÅ‚Äçüó® Face ID “õ–æ–ª–¥–∞–Ω—É
        </button>
        <p className="switch-link">
          –ê–∫–∫–∞—É–Ω—Ç—ã“£—ã–∑ –∂–æ“õ –ø–∞? <Link to="/register">–¢—ñ—Ä–∫–µ–ª—É</Link>
        </p>
      </form>
    </div>
  );
}
